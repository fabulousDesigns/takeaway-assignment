//-> Express framework
const express = require("express");
//-> This function will create a GraphQL HTTP handler for Express
const { createHandler } = require("graphql-http/lib/use/express");
// GraphQL schema and resolvers
const schema = require("./src/schema");
const resolvers = require("./src/resolvers");
// Import a utility to generate HTML content for the GraphiQL interface
const { ruruHTML } = require("ruru/server");
// Initialize an Express application
const app = express();
// Load environment variables from a.env file
require("dotenv").config();
// Configure the server to handle all types of HTTP requests to /graphql
// Use the imported createHandler function to create a GraphQL handler
app.all(
  "/graphql",
  createHandler({
    schema: schema,
    rootValue: resolvers,
    graphiql: true, 
  })
);
// Set up a route for accessing the GraphiQL playground
// Respond with HTML content generated by ruruHTML, including the necessary scripts and styles for the GraphiQL interface
app.get("/playground", (_req, res) => {
  res.type("html");
  res.end(ruruHTML({ endpoint: "/graphql" }));
});
// port number for the server to listen on
// Use the PORT environment variable if defined, otherwise default to 5000
const PORT = process.env.PORT || 5000;
// Start the server listening on the chosen port
// Log messages indicating the URLs for accessing the GraphQL API and the GraphiQL playground once the server is running
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}/graphql`);
  console.log(
    `GraphQL Playground is available at http://localhost:${PORT}/playground`
  );
});
